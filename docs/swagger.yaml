basePath: /
definitions:
  api.CreateMessagesRequest:
    properties:
      content:
        example: This is a message for multiple users.
        type: string
      recipients:
        example:
        - '[''+15551112222'''
        - ' ''+15553334444'']'
        items:
          type: string
        type: array
    type: object
  api.HTTPError:
    properties:
      details:
        example: 'Optional: specific error details'
        type: string
      error:
        example: Descriptive error message
        type: string
    type: object
  api.SchedulerStatusResponse:
    properties:
      status:
        example: running
        type: string
    type: object
  api.SuccessResponse:
    properties:
      message:
        example: Action was successful
        type: string
    type: object
  messages.Message:
    properties:
      content:
        description: The content of the message to be sent. Should not exceed content
          length limit.
        example: Your appointment is confirmed.
        type: string
      created_at:
        description: The timestamp when the message was created.
        example: "2025-07-09T10:00:00Z"
        type: string
      external_message_id:
        description: The ID returned from the external webhook service.
        example: ext-msg-12345
        type: string
      id:
        description: The unique identifier for the message.
        example: a1b2c3d4-e5f6-7890-1234-567890abcdef
        type: string
      last_failure_reason:
        description: The reason for the last failure, if any.
        example: Webhook provider timed out
        type: string
      recipient:
        description: The phone number of the recipient.
        example: "+15551234567"
        type: string
      status:
        description: The current status of the message.
        example: sent
        type: string
      updated_at:
        description: The timestamp when the message was last updated.
        example: "2025-07-09T10:01:00Z"
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a service for automatically sending scheduled messages.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Go Notify API
  version: "1.0"
paths:
  /api/v1/messages:
    post:
      consumes:
      - application/json
      description: Creates a new message with the same content for a list of recipient
        phone numbers.
      parameters:
      - description: Message Content and Recipients
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/api.CreateMessagesRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Messages have been accepted for processing
          schema:
            $ref: '#/definitions/api.SuccessResponse'
        "400":
          description: Invalid request body or message content
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Failed to save messages to the database
          schema:
            $ref: '#/definitions/api.HTTPError'
      summary: Create a message for multiple recipients
      tags:
      - messages
  /api/v1/messages/sent:
    get:
      description: Gets a paginated list of all messages that have been successfully
        sent.
      parameters:
      - default: 20
        description: Number of messages to return
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: A list of sent messages
          schema:
            items:
              $ref: '#/definitions/messages.Message'
            type: array
        "500":
          description: Failed to retrieve sent messages
          schema:
            $ref: '#/definitions/api.HTTPError'
      summary: Retrieve a list of sent messages
      tags:
      - messages
  /api/v1/scheduler:
    get:
      description: Returns whether the scheduler is currently running or stopped.
      produces:
      - application/json
      responses:
        "200":
          description: Current status of the scheduler
          schema:
            $ref: '#/definitions/api.SchedulerStatusResponse'
      summary: Get the current status of the scheduler
      tags:
      - scheduler
    post:
      description: Activates or deactivates the scheduler based on the 'action' query
        parameter.
      parameters:
      - description: 'The action to perform: ''start'' or ''stop'''
        enum:
        - start
        - stop
        in: query
        name: action
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Scheduler has stopped sucessfully.
          schema:
            $ref: '#/definitions/api.SuccessResponse'
        "202":
          description: Scheduler start signal sent.
          schema:
            $ref: '#/definitions/api.SuccessResponse'
        "400":
          description: Invalid or missing 'action' parameter
          schema:
            $ref: '#/definitions/api.HTTPError'
        "409":
          description: Scheduler is already in the desired state
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal server error while performing the action
          schema:
            $ref: '#/definitions/api.HTTPError'
      summary: Control the message sending scheduler (start/stop)
      tags:
      - scheduler
swagger: "2.0"
